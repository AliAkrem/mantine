(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[47524],{87597:function(e,n,d){(window.__NEXT_P=window.__NEXT_P||[]).push(["/hooks/use-did-update",function(){return d(70581)}])},70581:function(e,n,d){"use strict";d.r(n),d.d(n,{default:function(){return r}});var s=d(52322),i=d(45392),t=d(54078),c=d(15019);let o=(0,t.A)(c.us.useDidUpdate);function u(e){let n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"use-did-update"})," hook works the same way as ",(0,s.jsx)(n.code,{children:"useEffect"})," but it is not called when component is mounted:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { useDidUpdate } from '@mantine/hooks';\n\nfunction Demo() {\n  useDidUpdate(\n    () => console.log(\"Won't be called when mounted\"),\n    [dependency1, dependency2]\n  );\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"function useDidUpdate(fn: EffectCallback, dependencies?: any[]): void;\n"})})]})}function r(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,s.jsx)(o,{...e,children:(0,s.jsx)(u,{...e})})}}},function(e){e.O(0,[61177,66748,61639,92888,49774,40179],function(){return e(e.s=87597)}),_N_E=e.O()}]);